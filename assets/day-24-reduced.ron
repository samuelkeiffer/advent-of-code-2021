([(kind: Input, target: Z, input: BufferFront),
(kind: Addition, target: Z, input: Value(10)),
// Z = W1 + 10

(kind: Multiplication, target: Z, input: Value(26)),
(kind: Addition, target: Z, input: BufferFront),
(kind: Addition, target: Z, input: Value(16)),
// Z = 26 * (W1 + 10) + W2 + 16

(kind: Multiplication, target: Z, input: Value(26)),
(kind: Addition, target: Z, input: BufferFront),
// Z = 26 * (26 * (W1 + 10) + W2 + 16) + W3

(kind: Multiplication, target: Z, input: Value(26)),
(kind: Addition, target: Z, input: BufferFront),
(kind: Addition, target: Z, input: Value(13)),
// Z = 26 * (26 * (26 * (W1 + 10) + W2 + 16) + W3) + W4 + 13

(kind: Input, target: W, input: BufferFront),
(kind: Input, target: X, input: Field(Z)),
(kind: Modulus, target: X, input: Value(26)),
// X = W4 + 13
(kind: Division, target: Z, input: Value(26)),
// Z = 26 * (26 * (W1 + 10) + W2 + 16) + W3
(kind: Addition, target: X, input: Value(-14)),
// X = W4 - 1
(kind: Inequality, target: X, input: Field(W)),
(kind: Input, target: Y, input: Value(25)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Y, input: Value(1)),
(kind: Multiplication, target: Z, input: Field(Y)),
(kind: Multiplication, target: Y, input: Value(0)),
(kind: Addition, target: Y, input: Field(W)),
(kind: Addition, target: Y, input: Value(7)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Z, input: Field(Y)),

(kind: Input, target: W, input: BufferFront),
(kind: Input, target: X, input: Field(Z)),
(kind: Modulus, target: X, input: Value(26)),
(kind: Division, target: Z, input: Value(26)),
(kind: Addition, target: X, input: Value(-4)),
(kind: Inequality, target: X, input: Field(W)),
(kind: Input, target: Y, input: Value(25)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Y, input: Value(1)),
(kind: Multiplication, target: Z, input: Field(Y)),
(kind: Input, target: Y, input: Field(W)),
(kind: Addition, target: Y, input: Value(11)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Z, input: Field(Y)),

(kind: Multiplication, target: Z, input: Value(26)),
(kind: Addition, target: Z, input: BufferFront),
(kind: Addition, target: Z, input: Value(11)),

(kind: Input, target: W, input: BufferFront),
(kind: Input, target: X, input: Field(Z)),
(kind: Modulus, target: X, input: Value(26)),
(kind: Division, target: Z, input: Value(26)),
(kind: Addition, target: X, input: Value(-3)),
(kind: Inequality, target: X, input: Field(W)),
(kind: Input, target: Y, input: Value(25)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Y, input: Value(1)),
(kind: Multiplication, target: Z, input: Field(Y)),
(kind: Input, target: Y, input: Field(W)),
(kind: Addition, target: Y, input: Value(10)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Z, input: Field(Y)),

(kind: Multiplication, target: Z, input: Value(26)),
(kind: Addition, target: Z, input: BufferFront),
(kind: Addition, target: Z, input: Value(16)),

(kind: Input, target: W, input: BufferFront),
(kind: Input, target: X, input: Field(Z)),
(kind: Modulus, target: X, input: Value(26)),
(kind: Division, target: Z, input: Value(26)),
(kind: Addition, target: X, input: Value(-12)),
(kind: Inequality, target: X, input: Field(W)),
(kind: Input, target: Y, input: Value(25)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Y, input: Value(1)),
(kind: Multiplication, target: Z, input: Field(Y)),
(kind: Input, target: Y, input: Field(W)),
(kind: Addition, target: Y, input: Value(8)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Z, input: Field(Y)),

(kind: Multiplication, target: Z, input: Value(26)),
(kind: Addition, target: Z, input: BufferFront),
(kind: Addition, target: Z, input: Value(15)),

(kind: Input, target: W, input: BufferFront),
(kind: Input, target: X, input: Field(Z)),
(kind: Modulus, target: X, input: Value(26)),
(kind: Division, target: Z, input: Value(26)),
(kind: Addition, target: X, input: Value(-12)),
(kind: Inequality, target: X, input: Field(W)),
(kind: Input, target: Y, input: Value(25)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Y, input: Value(1)),
(kind: Multiplication, target: Z, input: Field(Y)),
(kind: Input, target: Y, input: Field(W)),
(kind: Addition, target: Y, input: Value(2)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Z, input: Field(Y)),

(kind: Input, target: W, input: BufferFront),
(kind: Input, target: X, input: Field(Z)),
(kind: Modulus, target: X, input: Value(26)),
(kind: Division, target: Z, input: Value(26)),
(kind: Addition, target: X, input: Value(-15)),
(kind: Inequality, target: X, input: Field(W)),
(kind: Input, target: Y, input: Value(25)),
(kind: Multiplication, target: Y, input: Field(X)),
(kind: Addition, target: Y, input: Value(1)),
(kind: Multiplication, target: Z, input: Field(Y)),
(kind: Input, target: Y, input: Field(W)),
(kind: Addition, target: Y, input: Value(5)),
(kind: Multiplication, target: Y, input: Field(X)),
// Y must be in range (13 - Z) <= Y <= (21 - Z)
(kind: Addition, target: Z, input: Field(Y)),

// W must equal Z - 12, Z must be 13 <= Z <= 21 (Z < 26 else it would fail from other step)
(kind: Input, target: W, input: BufferFront),
// Z must equal W + 12 + 26 * N
(kind: Input, target: X, input: Field(Z)),
(kind: Modulus, target: X, input: Value(26)),
(kind: Addition, target: X, input: Value(-12)),
(kind: Inequality, target: X, input: Field(W)),
// Z must be less than 26
(kind: Division, target: Z, input: Value(26)),
// Z must already be 0, sinze y will be 1 or 26
// X must be 0, doesn't matter y since always positive nonzero
// Y must be 0
(kind: Addition, target: Z, input: Field(X)),])

// =================================

// ([(kind: Input, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(10)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(16)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(13)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-14)),
// (kind: Inequality, target: X, input: Field(W)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Multiplication, target: Y, input: Value(0)),
// (kind: Addition, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(7)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-4)),
// (kind: Inequality, target: X, input: Field(W)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(11)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(11)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-3)),
// (kind: Inequality, target: X, input: Field(W)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(10)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(16)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-12)),
// (kind: Inequality, target: X, input: Field(W)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(8)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(15)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-12)),
// (kind: Inequality, target: X, input: Field(W)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(2)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-15)),
// (kind: Inequality, target: X, input: Field(W)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(5)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-12)),
// (kind: Inequality, target: X, input: Field(W)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(10)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),])

// ============================================

// ([(kind: Input, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(10)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(16)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(13)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-14)),
// (kind: Equality, target: X, input: Field(W)),
// (kind: Equality, target: X, input: Value(0)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Multiplication, target: Y, input: Value(0)),
// (kind: Addition, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(7)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-4)),
// (kind: Equality, target: X, input: Field(W)),
// (kind: Equality, target: X, input: Value(0)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(11)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(11)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-3)),
// (kind: Equality, target: X, input: Field(W)),
// (kind: Equality, target: X, input: Value(0)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(10)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(16)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-12)),
// (kind: Equality, target: X, input: Field(W)),
// (kind: Equality, target: X, input: Value(0)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(8)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Multiplication, target: Z, input: Value(26)),
// (kind: Addition, target: Z, input: BufferFront),
// (kind: Addition, target: Z, input: Value(15)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-12)),
// (kind: Equality, target: X, input: Field(W)),
// (kind: Equality, target: X, input: Value(0)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(2)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-15)),
// (kind: Equality, target: X, input: Field(W)),
// (kind: Equality, target: X, input: Value(0)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(5)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),

// (kind: Input, target: W, input: BufferFront),
// (kind: Input, target: X, input: Field(Z)),
// (kind: Modulus, target: X, input: Value(26)),
// (kind: Division, target: Z, input: Value(26)),
// (kind: Addition, target: X, input: Value(-12)),
// (kind: Equality, target: X, input: Field(W)),
// (kind: Equality, target: X, input: Value(0)),
// (kind: Input, target: Y, input: Value(25)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Y, input: Value(1)),
// (kind: Multiplication, target: Z, input: Field(Y)),
// (kind: Input, target: Y, input: Field(W)),
// (kind: Addition, target: Y, input: Value(10)),
// (kind: Multiplication, target: Y, input: Field(X)),
// (kind: Addition, target: Z, input: Field(Y)),])
